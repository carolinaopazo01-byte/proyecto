# Generated by Django 5.2.6 on 2025-10-28 01:51

from django.conf import settings
from django.db import migrations


def backfill_profesor(apps, schema_editor):
    # Modelo objetivo
    Curso = apps.get_model('core', 'Curso')

    # AUTH_USER_MODEL viene como "app_label.ModelName"
    app_label, model_name = settings.AUTH_USER_MODEL.split('.')
    User = apps.get_model(app_label, model_name)

    # 1) intenta un usuario marcado como profesor (si tu modelo tiene ese campo)
    profesor = User.objects.filter(**{'tipo_usuario': 'PROF'}).first()

    # 2) si no hay, intenta tomar algún staff
    if not profesor:
        profesor = User.objects.filter(is_staff=True).first()

    # 3) si tampoco, crea un placeholder seguro
    if not profesor:
        profesor, _ = User.objects.get_or_create(
            username='profesor_sin_asignar',
            defaults={
                'first_name': 'SIN',
                'last_name': 'ASIGNAR',
                'email': 'sin_asignar@local',
                'is_active': True,
            }
        )
        try:
            profesor.set_unusable_password()
            profesor.save(update_fields=['password'])
        except Exception:
            pass

    # Rellena todos los cursos que aún estén sin profesor
    Curso.objects.filter(profesor__isnull=True).update(profesor=profesor)


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_merge_20251027_0244'),  # ← deja esto igual
    ]

    operations = [
        migrations.RunPython(backfill_profesor, migrations.RunPython.noop),
    ]
